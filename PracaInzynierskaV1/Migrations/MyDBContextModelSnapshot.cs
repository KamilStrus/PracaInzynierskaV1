// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PracaInzynierskaV1.Models;

namespace PracaInzynierskaV1.Migrations
{
    [DbContext(typeof(MyDBContext))]
    partial class MyDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PracaInzynierskaV1.Models.DNagroda", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("cost")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("ilosc")
                        .HasColumnType("int");

                    b.Property<string>("imageB")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("id");

                    b.ToTable("DNagroda");
                });

            modelBuilder.Entity("PracaInzynierskaV1.Models.DUser", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<string>("imageB")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("surname")
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("id");

                    b.ToTable("DUser");
                });

            modelBuilder.Entity("PracaInzynierskaV1.Models.DUser_DNagroda", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DNagrodaID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DUserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DNagrodaID");

                    b.HasIndex("DUserID");

                    b.ToTable("DUser_DNagroda");
                });

            modelBuilder.Entity("PracaInzynierskaV1.Models.DZguba", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("freward")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("imageB")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("user")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("user");

                    b.ToTable("DZguby");
                });

            modelBuilder.Entity("PracaInzynierskaV1.Models.Email", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("clientemail")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("sent")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("PracaInzynierskaV1.Models.Gatunek", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("gatuneknazwa")
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("id");

                    b.ToTable("Gatunek");
                });

            modelBuilder.Entity("PracaInzynierskaV1.Models.MarkaUbranie", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("markaubrania")
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("id");

                    b.ToTable("MarkaUbranie");
                });

            modelBuilder.Entity("PracaInzynierskaV1.Models.Producents", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("producentnazwa")
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("id");

                    b.ToTable("Producents");
                });

            modelBuilder.Entity("PracaInzynierskaV1.Models.RodzajElektronika", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("rodzajelektroniki")
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("id");

                    b.ToTable("RodzajElektronika");
                });

            modelBuilder.Entity("PracaInzynierskaV1.Models.RodzajUbranie", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("rodzajubrania")
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("id");

                    b.ToTable("RodzajUbranie");
                });

            modelBuilder.Entity("PracaInzynierskaV1.Models.DZguba_Elektronika", b =>
                {
                    b.HasBaseType("PracaInzynierskaV1.Models.DZguba");

                    b.Property<string>("Producent")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Rodzaj")
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("DZgubaElektronika");
                });

            modelBuilder.Entity("PracaInzynierskaV1.Models.DZguba_Ubranie", b =>
                {
                    b.HasBaseType("PracaInzynierskaV1.Models.DZguba");

                    b.Property<string>("Kolor")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Marka")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Rodzaj")
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("DZgubaUbranie");
                });

            modelBuilder.Entity("PracaInzynierskaV1.Models.DZguba_Zwierze", b =>
                {
                    b.HasBaseType("PracaInzynierskaV1.Models.DZguba");

                    b.Property<string>("gatunek")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("umaszczenie")
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("DZgubaZwierze");
                });

            modelBuilder.Entity("PracaInzynierskaV1.Models.DUser_DNagroda", b =>
                {
                    b.HasOne("PracaInzynierskaV1.Models.DNagroda", "Nagroda")
                        .WithMany("DUser_DNagroda")
                        .HasForeignKey("DNagrodaID");

                    b.HasOne("PracaInzynierskaV1.Models.DUser", "User")
                        .WithMany("DUser_DNagroda")
                        .HasForeignKey("DUserID");

                    b.Navigation("Nagroda");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PracaInzynierskaV1.Models.DZguba", b =>
                {
                    b.HasOne("PracaInzynierskaV1.Models.DUser", "DUser")
                        .WithMany("DZguba")
                        .HasForeignKey("user");

                    b.Navigation("DUser");
                });

            modelBuilder.Entity("PracaInzynierskaV1.Models.DZguba_Elektronika", b =>
                {
                    b.HasOne("PracaInzynierskaV1.Models.DZguba", null)
                        .WithOne()
                        .HasForeignKey("PracaInzynierskaV1.Models.DZguba_Elektronika", "id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PracaInzynierskaV1.Models.DZguba_Ubranie", b =>
                {
                    b.HasOne("PracaInzynierskaV1.Models.DZguba", null)
                        .WithOne()
                        .HasForeignKey("PracaInzynierskaV1.Models.DZguba_Ubranie", "id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PracaInzynierskaV1.Models.DZguba_Zwierze", b =>
                {
                    b.HasOne("PracaInzynierskaV1.Models.DZguba", null)
                        .WithOne()
                        .HasForeignKey("PracaInzynierskaV1.Models.DZguba_Zwierze", "id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PracaInzynierskaV1.Models.DNagroda", b =>
                {
                    b.Navigation("DUser_DNagroda");
                });

            modelBuilder.Entity("PracaInzynierskaV1.Models.DUser", b =>
                {
                    b.Navigation("DUser_DNagroda");

                    b.Navigation("DZguba");
                });
#pragma warning restore 612, 618
        }
    }
}
